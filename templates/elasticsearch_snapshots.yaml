AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Custom Scheduled Elasticsearch Domain Snapshots
Metadata:
  Authors:
    Description: Scott Schmidt (scott@1strategy.com)

    Purpose:
      Description: This template is used to create a stack that implements Elasticsearch Snapshots on a custom schedule, configurable for both Public and VPC Elasticsearch Domains

    License:
      Description: |
        Copyright 2019 1Strategy

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AWS::CloudFormation::Interface:
      ParameterGroups:
        -
          Label:
            default: VPC Config
          Parameters:
            - VpcId
            - SubnetIds
            - ElasticsearchDomainSecurityGroupId
        -
          Label:
            default: Elasticsearch Cluster
          Parameters:
            - IsElasticsearchInVpc
            - DomainName
            - SnapshotRepoName
            - ElasticsearchDomainUrl
            - SnapshotScheduleExpression

      ParameterLabels:
        VpcId:
          default: Elasticsearch VPC ID
        SubnetIds:
          default: Elasticsearch Subnet IDs
        ElasticsearchDomainSecurityGroupId:
          default: Elasticsearch Domain Security Group Id
        IsElasticsearchInVpc:
          default: Is the Elasticsearch Domain in a VPC?
        DomainName:
          default: Elasticsearch Domain name
        SnapshotRepoName:
          default: Snapshot Repository name
        ElasticsearchDomainUrl:
          default: Elasticsearch Domain Endpoint
        SnapshotScheduleExpression:
          default: CloudWatch Schedule Expression


##########################################################################################
# PARAMETERS
##########################################################################################
Parameters:
  IsElasticsearchInVpc:
    Type: String
    Description: Is the Elasticsearch Domain located in a VPC?
    AllowedValues:
      - true
      - false
    ConstraintDescription: Must be a boolean (true/false) value

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: (If located in VPC) Which subnet(s) is the Elasticsearch Domain located in?
    ConstraintDescription: Must be a list of valid VPC Subnet Ids
    Default: ""

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: (If located in VPC) Which VPC is the Elasticsearch Domain located in?
    ConstraintDescription: Must be a valid AWS VPC Id
    Default: ""

  DomainName:
    Type: String
    Description: What is the name of the Elasticsearch Domain?

  SnapshotRepoName:
    Type: String
    Description: What to name for the Domain Snapshot Repository?
    AllowedPattern: ^[a-zA_Z]+([a-zA_Z0-9\-\_]+)([a-zA_Z0-9]+)$
    ConstraintDescription: Must follow standard naming conventions for S3 Bucket Prefix

  SnapshotScheduleExpression:
    Type: String
    Description: Cron Expression (CloudWatch Syntax) for scheduling snapshots
    Default: rate(1 hour)

  ElasticsearchDomainUrl:
    Type: String
    Description: SSM Parameter name of the Elasticsearch Doman URL

  ElasticsearchDomainSecurityGroupId:
    Type: String
    Description: SSM Parameter name of the Elasticsearch Domain Security Group ID
    Default: ""


##########################################################################################
# CONDITIONS
##########################################################################################
Conditions:
  UsesVpc:
    !Equals [!Ref IsElasticsearchInVpc, true]


##########################################################################################
# RESOURCES
##########################################################################################
Resources:
#############################################
# IAM ROLES
#############################################
  ElasticsearchDomainRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: es.amazonaws.com

  UpdateDomainAccessPolicyFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  UpdateDomainSecurityGroupFunctionRole:
    Type: AWS::IAM::Role
    Condition: UsesVpc
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CreateSnapshotRepoFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::If:
          - UsesVpc
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CreateSnapshotFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - Fn::If:
          - UsesVpc
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

#############################################
# IAM POLICIES
#############################################
  ElasticsearchDomainPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref ElasticsearchDomainRole
      PolicyName: !Sub "${AWS::StackName}-create-elasticsearch-snapshot-repository-policy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: EsDomainHttpPermissions
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: !Sub "arn:${AWS::Partition}:es:${AWS::Region}:${AWS::AccountId}:domain/${DomainName}"
          - Sid: S3BucketPermissions
            Effect: Allow
            Action:
              - s3:ListBucket
            Resource: !GetAtt ElasticsearchSnapshotBucket.Arn
          - Sid: S3ObjectPermissions
            Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
            Resource: !Sub "${ElasticsearchSnapshotBucket.Arn}/*"

  UpdateDomainAccessPolicyFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref UpdateDomainAccessPolicyFunctionRole
      PolicyName: !Sub "${AWS::StackName}-elasticsearch-config-update-policy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: EsDomainAccessPolicyPermissions
            Effect: Allow
            Action:
              - es:DescribeElasticsearchDomainConfig
              - es:UpdateElasticsearchDomainConfig
            Resource: !Sub "arn:${AWS::Partition}:es:${AWS::Region}:${AWS::AccountId}:domain/${DomainName}"

  UpdateDomainSecurityGroupPolicy:
    Type: AWS::IAM::Policy
    Condition: UsesVpc
    Properties:
      Roles:
        - !Ref UpdateDomainSecurityGroupFunctionRole
      PolicyName: !Sub "${AWS::StackName}-elasticsearch-security-group-update-policy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: VpcSecurityGroupDescribePermissions
            Effect: Allow
            Action:
              - ec2:DescribeSecurityGroups
            Resource: "*"
          - Sid: VpcSecurityGroupAuthorizeIngressPermissions
            Effect: Allow
            Action:
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:RevokeSecurityGroupIngress
            Resource: !Sub "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:security-group/${ElasticsearchDomainSecurityGroupId}"


  CreateSnapshotRepoFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref CreateSnapshotRepoFunctionRole
      PolicyName: !Sub "${AWS::StackName}-elasticsearch-snapshot-repo-policy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: IamRolePermissions
            Effect: Allow
            Action:
              - iam:GetRole
              - iam:PassRole
            Resource:
              - !GetAtt ElasticsearchDomainRole.Arn
          - Sid: EsDomainPermissions
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: !Sub "arn:${AWS::Partition}:es:${AWS::Region}:${AWS::AccountId}:domain/${DomainName}"

  CreateSnapshotFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref CreateSnapshotFunctionRole
      PolicyName: !Sub "${AWS::StackName}-elasticsearch-snapshot-lambda"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: EsDomainHttpPermissions
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: !Sub "arn:${AWS::Partition}:es:${AWS::Region}:${AWS::AccountId}:domain/${DomainName}"


#############################################
# SNAPSHOT BUCKET (Please configure...)
#############################################
  ElasticsearchSnapshotBucket:
    Type: AWS::S3::Bucket  # TODO: Update the bucket props (Access and Lifecycle policies)
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 4
            Status: Enabled

#############################################
# SNAPSHOT SECURITY GROUP (VPC ONLY)
#############################################
  SnapshotFunctionSecurityGroup:
    Condition: UsesVpc
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Elasticsearch Snapshot Function
      GroupDescription: Snapshot Function; No Ingress
      VpcId: !Ref VpcId

#############################################
# SHARED LAMBDA DEPENDENCIES
#############################################
  FunctionDependencyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: es-domain-snapshot-dependencies
      Description: Adds shared dependencies for all Lambdas and Lambda-backed Custom Resources
      ContentUri: "functions/function_dependencies/http_requests/."
      CompatibleRuntimes:
        - python3.7
      LicenseInfo: Available under the Apache license.
      RetentionPolicy: Delete

#############################################
# UPDATE ES DOMAIN ACCESS POLICY
#############################################
  UpdateDomainAccessPolicy:
    Type: Custom::UpdateDomainAccessPolicy
    Properties:
      ServiceToken: !GetAtt UpdateDomainAccessPolicyFunction.Arn
      DomainName: !Ref DomainName
      RoleArns:
        - !GetAtt CreateSnapshotFunctionRole.Arn
        - !GetAtt CreateSnapshotRepoFunctionRole.Arn

  UpdateDomainAccessPolicyFunction:
    Type: AWS::Serverless::Function
    DependsOn: UpdateDomainAccessPolicyFunctionPolicy
    Properties:
      Handler: "custom_resources/access_policy_updates/update_access_policy.handler"
      Runtime: python3.7
      Role: !GetAtt UpdateDomainAccessPolicyFunctionRole.Arn
      Timeout: 300
      Layers:
        - !Ref FunctionDependencyLayer

#############################################
# UPDATE ES DOMAIN SECURITY GROUP (VPC ONLY)
#############################################
  UpdateDomainSecurityGroup:
    Condition: UsesVpc
    DependsOn: UpdateDomainSecurityGroupPolicy
    Type: Custom::UpdateDomainSecurityGroup
    Properties:
      ServiceToken: !GetAtt UpdateDomainSecurityGroupFunction.Arn
      SnapshotFunctionSecurityGroupId: !Ref SnapshotFunctionSecurityGroup
      DomainSecurityGroupId: !Ref ElasticsearchDomainSecurityGroupId

  UpdateDomainSecurityGroupFunction:
    Type: AWS::Serverless::Function
    Condition: UsesVpc
    Properties:
      Handler: "custom_resources/security_group_updates/security_groups.handler"
      Runtime: python3.7
      Role: !GetAtt UpdateDomainSecurityGroupFunctionRole.Arn
      Timeout: 300
      Layers:
        - !Ref FunctionDependencyLayer

#############################################
# CREATE SNAPSHOT REPOSITORY
#############################################
  CreateSnapshotRepo:
    Type: Custom::CreateSnapshotRepo
    DependsOn: UpdateDomainAccessPolicy
    Properties:
      ServiceToken: !GetAtt CreateSnapshotRepoFunction.Arn
      ElasticsearchDomainUrl: !Ref ElasticsearchDomainUrl
      SnapshotBucket: !Ref ElasticsearchSnapshotBucket
      ElasticsearchDomainRoleArn: !GetAtt ElasticsearchDomainRole.Arn
      SnapshotRepoName: !Ref SnapshotRepoName

  CreateSnapshotRepoFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - ElasticsearchDomainPolicy
      - CreateSnapshotRepoFunctionPolicy
    Properties:
      Handler: "custom_resources/snapshot_repository/create_repo.handler"
      Runtime: python3.7
      Role: !GetAtt CreateSnapshotRepoFunctionRole.Arn
      Timeout: 300
      VpcConfig:
        Fn::If:
          - UsesVpc
          - SecurityGroupIds:
              - !Ref SnapshotFunctionSecurityGroup
            SubnetIds: !Ref SubnetIds
          - !Ref "AWS::NoValue"
      Layers:
        - !Ref FunctionDependencyLayer

#############################################
# SCHEDULE & CREATE SNAPSHOTS
#############################################
  ElasticsearchSnapshotFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - CreateSnapshotFunctionPolicy
      - CreateSnapshotRepo
    Properties:
      Handler: "functions/snapshot_function/es_snapshot.handler"
      Runtime: python3.7
      Role: !GetAtt CreateSnapshotFunctionRole.Arn
      Timeout: 900
      VpcConfig:
        Fn::If:
          - UsesVpc
          - SecurityGroupIds:
              - !Ref SnapshotFunctionSecurityGroup
            SubnetIds: !Ref SubnetIds
          - !Ref "AWS::NoValue"
      Layers:
        - !Ref FunctionDependencyLayer
      Environment:
        Variables:
          ES_HOST: !Ref ElasticsearchDomainUrl
          REPO_NAME: !Ref SnapshotRepoName

  ElasticsearchSnapshotRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Event Schedule for triggering frequest snapshots of Elasticsearch Domain
      ScheduleExpression: !Ref SnapshotScheduleExpression
      State: ENABLED
      Targets:
        - Arn: !GetAtt ElasticsearchSnapshotFunction.Arn
          Id: elasticsearch-snapshot-rule-target

  ElasticsearchSnapshotRulePermissions:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ElasticsearchSnapshotFunction
      Action:  lambda:InvokeFunction
      Principal:  events.amazonaws.com
      SourceArn: !GetAtt ElasticsearchSnapshotRule.Arn

